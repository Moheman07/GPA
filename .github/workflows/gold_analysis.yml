name: Gold Analysis

on:
  schedule:
    - cron: '0 */3 * * 1-5'  # كل 3 ساعات في أيام الأسبوع
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # مهم لرفع الملفات للمستودع
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run Analysis
      env:
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      run: python main_analyzer.py
        
    - name: List generated files
      run: |
        echo "الملفات المُنشأة:"
        ls -la *.json || echo "لا توجد ملفات JSON"
        
    - name: Upload to Artifacts (نسخة احتياطية)
      uses: actions/upload-artifact@v4
      with:
        name: gold-analysis-${{ github.run_number }}
        path: "*.json"
        retention-days: 30
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "Gold Analysis Bot"
        
    - name: Add and commit files
      run: |
        # إضافة جميع ملفات JSON
        git add *.json
        
        # التحقق من وجود تغييرات
        if git diff --staged --quiet; then
          echo "لا توجد تغييرات للرفع"
        else
          # إنشاء رسالة الـ commit مع النتائج
          if [ -f "gold_analysis_latest.json" ]; then
            SIGNAL=$(python -c "import json; data=json.load(open('gold_analysis_latest.json')); print(data.get('gold_analysis', {}).get('signal', 'N/A'))")
            PRICE=$(python -c "import json; data=json.load(open('gold_analysis_latest.json')); print(data.get('gold_analysis', {}).get('price_usd', 'N/A'))")
            git commit -m "🔄 Gold Analysis Update: $SIGNAL signal at \$$PRICE ($(date +'%Y-%m-%d %H:%M UTC'))"
          else
            git commit -m "🔄 Gold Analysis Update ($(date +'%Y-%m-%d %H:%M UTC'))"
          fi
          
          # رفع التغييرات
          git push origin HEAD:${{ github.ref_name }}
          echo "✅ تم رفع الملفات للمستودع بنجاح"
        fi

    - name: Create/Update README with results
      if: success()
      run: |
        # إنشاء أو تحديث README مع آخر النتائج
        python create_readme.py
        
        # رفع README إذا تم تحديثه
        if git diff --quiet README.md; then
          echo "لا توجد تحديثات على README"
        else
          git add README.md
          git commit -m "📊 Update README with latest analysis"
          git push origin HEAD:${{ github.ref_name }}
        fi
