name: Gold Market Analysis

on:
  schedule:
    # Run daily at 9:00 AM UTC (after market opens)
    - cron: '0 9 * * 1-5'  # Monday to Friday
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main, master ]

jobs:
  analyze-gold:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-github.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-github.txt
        python -m spacy download en_core_web_sm
        
    - name: Run Gold Analyzer
      env:
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      run: |
        python gold_analyzer_github.py
        
    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      with:
        name: gold-analysis-${{ github.run_number }}
        path: |
          gold_analysis_v3_enhanced.json
          gold_analyzer.log
          analysis_history.db
        retention-days: 30
        
    - name: Create release with results
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: analysis-${{ github.run_number }}
        name: Gold Analysis ${{ github.run_number }}
        body: |
          🏆 **Gold Market Analysis Results**
          
          📅 **Date**: ${{ github.event.head_commit.timestamp }}
          🔄 **Run**: #${{ github.run_number }}
          
          📊 **Files Generated**:
          - `gold_analysis_v3_enhanced.json` - Complete analysis results
          - `gold_analyzer.log` - Execution logs
          - `analysis_history.db` - Historical data database
          
          📈 **How to view results**:
          1. Download the attached files
          2. Open `gold_analysis_v3_enhanced.json` to see the analysis
          3. Check `gold_analyzer.log` for detailed execution info
          
          🔄 **Next Analysis**: Scheduled for tomorrow at 9:00 AM UTC
        files: |
          gold_analysis_v3_enhanced.json
          gold_analyzer.log
          analysis_history.db
        
    - name: Post results to repository
      run: |
        # Create results directory if it doesn't exist
        mkdir -p results
        
        # Copy latest results with timestamp
        TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
        cp gold_analysis_v3_enhanced.json "results/analysis_${TIMESTAMP}.json"
        
        # Create a summary file
        echo "# Latest Gold Analysis Results" > ANALYSIS_SUMMARY.md
        echo "" >> ANALYSIS_SUMMARY.md
        echo "📅 **Last Updated**: $(date)" >> ANALYSIS_SUMMARY.md
        echo "🔄 **Run Number**: ${{ github.run_number }}" >> ANALYSIS_SUMMARY.md
        echo "" >> ANALYSIS_SUMMARY.md
        
        # Extract key information from JSON if possible
        if command -v jq &> /dev/null; then
          echo "## 📊 Quick Summary" >> ANALYSIS_SUMMARY.md
          echo "" >> ANALYSIS_SUMMARY.md
          
          # Extract signal and price
          SIGNAL=$(jq -r '.gold_analysis.signal // "N/A"' gold_analysis_v3_enhanced.json)
          CONFIDENCE=$(jq -r '.gold_analysis.confidence // "N/A"' gold_analysis_v3_enhanced.json)
          PRICE=$(jq -r '.gold_analysis.current_price // "N/A"' gold_analysis_v3_enhanced.json)
          SCORE=$(jq -r '.gold_analysis.total_score // "N/A"' gold_analysis_v3_enhanced.json)
          
          echo "- **Signal**: $SIGNAL" >> ANALYSIS_SUMMARY.md
          echo "- **Confidence**: $CONFIDENCE" >> ANALYSIS_SUMMARY.md
          echo "- **Current Price**: \$$PRICE" >> ANALYSIS_SUMMARY.md
          echo "- **Total Score**: $SCORE" >> ANALYSIS_SUMMARY.md
          echo "" >> ANALYSIS_SUMMARY.md
        fi
        
        echo "📁 **Download Full Results**: Check the latest release or artifacts" >> ANALYSIS_SUMMARY.md
        echo "" >> ANALYSIS_SUMMARY.md
        echo "🔄 **View All Results**: [Browse results folder](./results/)" >> ANALYSIS_SUMMARY.md
        
    - name: Commit and push results
      run: |
        git config --global user.name 'Gold Analyzer Bot'
        git config --global user.email 'gold-analyzer@github-actions.local'
        git add results/ ANALYSIS_SUMMARY.md
        git commit -m "📊 Gold analysis results - Run #${{ github.run_number }}" || exit 0
        git push || echo "Nothing to push"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
