name: محلل الذهب الاحترافي

on:
  # تشغيل تلقائي كل 4 ساعات خلال أيام التداول
  schedule:
    - cron: '0 */4 * * 1-5'  # كل 4 ساعات من الاثنين إلى الجمعة
    - cron: '0 9,21 * * 6-0'  # مرتين يوم السبت والأحد
  
  # تشغيل يدوي
  workflow_dispatch:
    inputs:
      force_run:
        description: 'Force run analysis'
        required: false
        default: 'false'
        type: boolean

jobs:
  analyze-gold:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: 🔄 جلب الكود
      uses: actions/checkout@v4
      
    - name: 🐍 إعداد Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: 📦 تثبيت المكتبات
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔧 إعداد المجلدات
      run: |
        mkdir -p results
        mkdir -p logs
        
    - name: 📊 تشغيل تحليل الذهب
      env:
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      run: |
        echo "🚀 بدء تحليل الذهب..."
        python enhanced_gold_analyzer.py
        
    - name: 📁 حفظ النتائج
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: gold-analysis-results-${{ github.run_number }}
        path: |
          results/
          *.json
          *.txt
        retention-days: 30
        
    - name: 📊 ملخص النتائج
      if: always()
      run: |
        echo "## 📊 نتائج تحليل الذهب" >> $GITHUB_STEP_SUMMARY
        echo "**التوقيت:** $(date)" >> $GITHUB_STEP_SUMMARY
        echo "**رقم التشغيل:** ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        
        if [ -f "results/gold_analysis_*.json" ]; then
          echo "✅ **الحالة:** تم بنجاح" >> $GITHUB_STEP_SUMMARY
          echo "📁 **الملفات المحفوظة:**" >> $GITHUB_STEP_SUMMARY
          ls -la results/ >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **الحالة:** فشل في التحليل" >> $GITHUB_STEP_SUMMARY
        fi
