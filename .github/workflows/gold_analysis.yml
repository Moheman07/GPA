name: Gold Market Analysis

on:
  schedule:
    # Run daily at 9:00 AM UTC (after market opens)
    - cron: '0 9 * * 1-5'  # Monday to Friday
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main, master ]

jobs:
  analyze-gold:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Verify repository contents
      run: |
        echo "📁 Repository contents:"
        ls -la
        echo ""
        echo "🐍 Python files:"
        find . -name "*.py" -type f || echo "No Python files found"
        echo ""
        echo "📋 Requirements files:"
        find . -name "requirements*.txt" -type f || echo "No requirements files found"
      
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        
        # Try installation in order of speed (fastest first)
        if [ -f "requirements-github-lite.txt" ]; then
          echo "Using requirements-github-lite.txt (fastest)"
          pip install -r requirements-github-lite.txt
        elif [ -f "requirements-github.txt" ]; then
          echo "Using requirements-github.txt (medium speed)"
          pip install -r requirements-github.txt
        elif [ -f "requirements.txt" ]; then
          echo "Using requirements.txt as fallback (slower)"
          pip install -r requirements.txt
        else
          echo "No requirements file found, installing core dependencies"
          pip install yfinance pandas numpy scikit-learn joblib aiohttp requests matplotlib setuptools wheel
        fi
        
        # Install spaCy model only if spacy is installed
        if python -c "import spacy" 2>/dev/null; then
          echo "Installing spaCy model..."
          python -m spacy download en_core_web_sm
        else
          echo "spaCy not installed, skipping model download"
        fi
        
    - name: Run Gold Analyzer
      env:
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      run: |
        echo "📁 Checking available files..."
        ls -la *.py || echo "No Python files found"
        
        # Try to use analyzers in order of preference
        if [ -f "gold_analyzer_lite.py" ]; then
          echo "✅ Using lightweight analyzer for faster execution"
          python gold_analyzer_lite.py
        elif [ -f "gold_analyzer_github.py" ]; then
          echo "✅ Using standard GitHub analyzer"
          python gold_analyzer_github.py
        elif [ -f "gold_analyzer_complete.py" ]; then
          echo "✅ Using complete analyzer (slower)"
          python gold_analyzer_complete.py
        elif [ -f "fallback_analyzer.py" ]; then
          echo "⚠️ Using fallback analyzer (basic features only)"
          python fallback_analyzer.py
        else
          echo "❌ No analyzer found. Available Python files:"
          find . -name "*.py" -type f || echo "No Python files in repository"
          echo ""
          echo "📋 Expected files (in order of preference):"
          echo "  1. gold_analyzer_lite.py (recommended - fast)"
          echo "  2. gold_analyzer_github.py (alternative - medium)"
          echo "  3. gold_analyzer_complete.py (full features - slow)"
          echo "  4. fallback_analyzer.py (basic features only)"
          echo ""
          echo "📤 Please upload at least one analyzer file to your repository."
          echo "💡 Visit: https://github.com/your-username/your-repo/upload"
          exit 1
        fi
        
    - name: Upload analysis results
      uses: actions/upload-artifact@v4
      with:
        name: gold-analysis-${{ github.run_number }}
        path: |
          gold_analysis_v3_enhanced.json
          gold_analyzer.log
          analysis_history.db
        retention-days: 30
        
    - name: Create release with results
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: analysis-${{ github.run_number }}
        name: Gold Analysis ${{ github.run_number }}
        body: |
          🏆 **Gold Market Analysis Results**
          
          📅 **Date**: ${{ github.event.head_commit.timestamp }}
          🔄 **Run**: #${{ github.run_number }}
          
          📊 **Files Generated**:
          - `gold_analysis_v3_enhanced.json` - Complete analysis results
          - `gold_analyzer.log` - Execution logs
          - `analysis_history.db` - Historical data database
          
          📈 **How to view results**:
          1. Download the attached files
          2. Open `gold_analysis_v3_enhanced.json` to see the analysis
          3. Check `gold_analyzer.log` for detailed execution info
          
          🔄 **Next Analysis**: Scheduled for tomorrow at 9:00 AM UTC
        files: |
          gold_analysis_v3_enhanced.json
          gold_analyzer.log
          analysis_history.db
